---
AWSTemplateFormatVersion: 2010-09-09
Description: "This template deploys the 3decision helm chart, as well as related helm and kubernetes resources. (qs-1s40771km)."
Metadata:
  QuickStartDocumentation:
    EntrypointName: "3decision Kubernetes and Helm Deployment"
  LintSpellExclude:
    - Discngine
    - 3decision
Parameters:
  TNamespace:
    Default: tdecision
    Type: String
  JWTSecretName:
    Default: 3decision-jwt-secret
    Type: String
  JWTPrivateKey:
    Type: String
    NoEcho: true
  JWTPublicKey:
    Type: String
  EKSClusterName:
    Type: String
  DBPassword:
    Type: String
    NoEcho: true
  DBConnectionString:
    Type: String
  CollectionVolumeID:
    Type: String
  Data3DecVolumeID:
    Type: String
  PipelinePassword:
    Type: String
    NoEcho: true
Resources:
  TDecisionNamespace:
    Type: "AWSQS::Kubernetes::Resource"
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: 'kube-system'
      Manifest: !Sub |
        kind: Namespace
        apiVersion: v1
        metadata:
          name: ${TNamespace}
  RabbitMQChart:
    Type: "AWSQS::Kubernetes::Helm"
    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
    Properties:
      ClusterID: !Ref EKSClusterName
      Name: rabbitmq
      Namespace: rabbitmq
      Repository: https://charts.bitnami.com/bitnami
      Chart: rabbitmq
      Version: 6.27.1
      Values:
        image.tag: 3.8.19-debian-10-r30
        rabbitmq.username: discngine
        rabbitmq.password: lapin79
  RegistryAccessSecret:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: TDecisionNamespace
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: !Ref TNamespace
      Manifest: !Sub |
        kind: Secret
        apiVersion: v1
        type: kubernetes.io/dockerconfigjson
        metadata:
          name: ociregistry
          namespace: ${TNamespace}
        data:
          .dockerconfigjson: ew0KICAiYXV0aHMiOiB7DQogICAgImZyYS5vY2lyLmlvIjogew0KICAgICAgImF1dGgiOiAiWkdselkyNW5hVzVsTVM5cFpHTnpYMlpsWkdWeVlYUnBiMjR2YW05dVlYUm9ZVzR1YldGdVlYTnpaVzVBWkdselkyNW5hVzVsTG1OdmJUcDFXRFVqWTFKbmRVSTRURlpIWWs4eFozUXROZz09Ig0KICAgIH0NCiAgfQ0KfQ0K
  JWTSecret:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: TDecisionNamespace
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: !Ref TNamespace
      Manifest: !Sub |
        kind: Secret
        apiVersion: v1
        type: opaque
        metadata:
          name: ${JWTSecretName}
          namespace: ${TNamespace}
        data:
          id_rsa: ${JWTPrivateKey}
          id_rsa.pub: ${JWTPublicKey}
  ChangeDBPass:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: TDecisionNamespace
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: !Ref TNamespace
      Manifest: !Sub |
        kind: Pod
        apiVersion: v1
        metadata:
          name: db-pass-change
        spec:
          restartPolicy: OnFailure
          containers:
          - name: db-pass-change
            image: fra.ocir.io/discngine1/3decision_kube/sqlcl
            command: ["/bin/bash", "-c"]
            args:
            - echo -ne '
              alter user ADMIN identified by "${DBPassword}";
              alter user PD_T1_DNG_THREEDECISION identified by "${DBPassword}";
              alter user PD_T1_DNG_CORE identified by "${DBPassword}";
              alter user CHEMBL_23 identified by "${DBPassword}";' > changepwd.sql;
              /root/sqlcl/bin/sql admin/Ch4ng3m3f0rs3cur3p4ss@${DBConnectionString} @changepwd.sql
            resources:
              limits:
                cpu: 500m
                memory: 500Mi
              requests:
                cpu: 150m
                memory: 250Mi
  TdecisionChart:
    Type: "AWSQS::Kubernetes::Helm"
    DependsOn: [ JWTSecret, RegistryAccessSecret ]
    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
    Properties:
      ClusterID: !Ref EKSClusterName
      Name: tdecision
      Namespace: !Ref TNamespace
      Chart: oci://751149478800.dkr.ecr.eu-central-1.amazonaws.com/3decision-private:latest
      Values:
        nodeCloud.volumes.jwtSecret.name: !Ref JWTSecretName
        oracle.password: !Ref DBPassword
        oracle.connectionString: !Ref DBConnectionString
        pipelinePilot.volumes.data3dec.awsElasticBlockStore.volumeID: !Ref Data3DecVolumeID
        pipelinePilot.volumes.collection.awsElasticBlockStore.volumeID: !Ref CollectionVolumeID
        pipelinePilot.password: !Ref PipelinePassword
  ChoralChart:
    Type: "AWSQS::Kubernetes::Helm"
    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
    Properties:
      ClusterID: !Ref EKSClusterName
      Name: choral
      Namespace: !Ref TNamespace
      Chart: oci://fra.ocir.io/discngine1/3decision_kube/choral-helm:latest
      Values:
        oracle.password: !Ref DBPassword
        oracle.connectionString: !Ref DBConnectionString