---
AWSTemplateFormatVersion: 2010-09-09
Description: "This template deploys the 3decision helm chart, as well as related helm and kubernetes resources. (qs-1s40771km)."
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Kubernetes and Helm Deployment"
  LintSpellExclude:
    - Discngine
    - 3decision

Parameters:
  TNamespace:
    Type: String
  RegistrySecretName:
    Type: String
  JWTSecretName:
    Type: String
  JWTPrivateKey:
    Type: String
    NoEcho: true
  JWTPublicKey:
    Type: String
  EKSClusterName:
    Type: String
  LoadBalancerEIP:
    Type: String
  TMPServer:
    Type: String
  TMPUsername:
    Type: String
  TMPPassword:
    Type: String
    NoEcho: true
Resources:
  ApplyResourceVersion:
    Type: AWS::CloudFormation::ResourceVersion
    Properties:
      TypeName: AWSQS::Kubernetes::Resource
      LoggingConfig:
        LogGroupName: cloudformation/registry/awsqs-kubernetes-resource-tmp
        LogRoleArn: arn:aws:iam::751149478800:role/aws-reserved/sso.amazonaws.com/eu-central-1/AWSReservedSSO_PowerUserPassRole_43aa7714fe785dcf
      SchemaHandlerPackage: s3://aws-quickstart/quickstart-kubernetes-resource-provider/awsqs_kubernetes_apply.zip
      ExecutionRoleArn: arn:aws:iam::751149478800:role/aws-reserved/sso.amazonaws.com/eu-central-1/AWSReservedSSO_PowerUserPassRole_43aa7714fe785dcf
  IngressNginxNamespace:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: ApplyResourceVersion
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: kube-system
      Manifest: !Sub |
        kind: Namespace
        apiVersion: v1
        metadata:
          name: ingress-nginx
  IngressNginxChart:
    Type: "AWSQS::Kubernetes::Helm"
    DependsOn: IngressNginxNamespace
    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
    Properties:
      ClusterID: !Ref EKSClusterName
      Name: ingress-nginx
      Namespace: ingress-nginx
      Repository: https://kubernetes.github.io/ingress-nginx
      Chart: ingress-nginx
      Values:
        controller.service.loadBalancerIP: !Ref LoadBalancerEIP
  TDecisionNamespace:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: ApplyResourceVersion
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: 'kube-system'
      Manifest: !Sub |
        kind: Namespace
        apiVersion: v1
        metadata:
          name: ${TNamespace}
  RegistryAccessSecret:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: TDecisionNamespace
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: !Ref TNamespace
      Manifest: !Sub |
        kind: Secret
        apiVersion: v1
        type: kubernetes.io/dockerconfigjson
        metadata:
          name = ${RegistrySecretName}
          namespace = ${TNamespace}
        data: |
          {
            "auths": {
              "${TMPServer}": {
                "auth": "base64encode("${TMPUsername}:${TMPPassword}")"
              }
            }
          }
  JWTSecret:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: TDecisionNamespace
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: !Ref TNamespace
      Manifest: !Sub |
        kind: Secret
        apiVersion: v1
        type: opaque
        metadata:
          name = ${JWTSecretName}
          namespace = ${TNamespace}
        data:
          id_rsa: ${JWTPrivateKey}
          id_rsa.pub: ${JWTPublicKey}