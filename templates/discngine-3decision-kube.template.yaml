---
AWSTemplateFormatVersion: 2010-09-09
Description: "This template deploys the 3decision helm chart, as well as related helm and kubernetes resources. (qs-1s40771km)."
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Kubernetes and Helm Deployment"
  LintSpellExclude:
    - Discngine
    - 3decision
Parameters:
  TNamespace:
    Type: String
  RegistrySecretName:
    Type: String
  JWTSecretName:
    Type: String
  JWTPrivateKey:
    Type: String
    NoEcho: true
  JWTPublicKey:
    Type: String
  EKSClusterName:
    Type: String
#  LoadBalancerEIP:
#    Type: String
  TMPServer:
    Type: String
  TMPUsername:
    Type: String
  TMPPassword:
    Type: String
    NoEcho: true
Resources:
  LoadBalancerEIP:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: LoadBalancerEIP
  TDecisionNamespace:
    Type: "AWSQS::Kubernetes::Resource"
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: 'kube-system'
      Manifest: !Sub |
        kind: Namespace
        apiVersion: v1
        metadata:
          name: ${TNamespace}
  IngressNginxChart:
    Type: "AWSQS::Kubernetes::Helm"
    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
    Properties:
      ClusterID: !Ref EKSClusterName
      Name: ingress-nginx
      Namespace: ingress-nginx
      Repository: https://kubernetes.github.io/ingress-nginx
      Chart: ingress-nginx
      Values:
        controller.service.annotations.service\.beta\.kubernetes\.io/aws-load-balancer-eip-allocations: !GetAtt LoadBalancerEIP.AllocationId
  CertManagerChart:
    Type: "AWSQS::Kubernetes::Helm"
    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
    Properties:
      ClusterID: !Ref EKSClusterName
      Name: cert-manager
      Namespace: cert-manager
      Repository: https://charts.jetstack.io
      Chart: cert-manager
      Version: 1.4.0
      Values:
        installCRDs: true
  RabbitMQChart:
    Type: "AWSQS::Kubernetes::Helm"
    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
    Properties:
      ClusterID: !Ref EKSClusterName
      Name: rabbitmq
      Namespace: rabbitmq
      Repository: https://charts.bitnami.com/bitnami
      Chart: rabbitmq
      Version: 6.27.1
      Values:
        image.tag: 3.8.19-debian-10-r30
        rabbitmq.username: discngine
        rabbitmq.password: lapin79
  RegistryAccessSecret:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: TDecisionNamespace
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: !Ref TNamespace
      Manifest: !Sub |
        kind: Secret
        apiVersion: v1
        type: kubernetes.io/dockerconfigjson
        metadata:
          name: ${RegistrySecretName}
          namespace: ${TNamespace}
        data:
          .dockerconfigjson: ew0KICAiYXV0aHMiOiB7DQogICAgImZyYS5vY2lyLmlvIjogew0KICAgICAgImF1dGgiOiAiWkdselkyNW5hVzVsTVM5cFpHTnpYMlpsWkdWeVlYUnBiMjR2YW05dVlYUm9ZVzR1YldGdVlYTnpaVzVBWkdselkyNW5hVzVsTG1OdmJUcDFXRFVqWTFKbmRVSTRURlpIWWs4eFozUXROZz09Ig0KICAgIH0NCiAgfQ0KfQ0K
  JWTSecret:
    Type: "AWSQS::Kubernetes::Resource"
    DependsOn: TDecisionNamespace
    Properties:
      ClusterName: !Ref EKSClusterName
      Namespace: !Ref TNamespace
      Manifest: !Sub |
        kind: Secret
        apiVersion: v1
        type: opaque
        metadata:
          name: ${JWTSecretName}
          namespace: ${TNamespace}
        data:
          id_rsa: ${JWTPrivateKey}
          id_rsa.pub: ${JWTPublicKey}
#  TdecisionChart:
#    Type: "AWSQS::Kubernetes::Helm"
#    DependsOn: [ JWTSecret, RegistryAccessSecret, IngressNginxChart, CertManagerChart ]
#    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
#    Properties:
#      ClusterID: !Ref EKSClusterName
#      Name: tdecision
#      Namespace: !Ref TNamespace
#      Chart: oci://fra.ocir.io/discngine1/3decision_kube/3decision:v21.09.09
#      RepositoryOptions:
#        Username: !Ref TMPUsername
#        Password: !Ref TMPPassword