---
AWSTemplateFormatVersion: 2010-09-09
Description: "This template sets up Discngine 3decision infrastructure. (qs-1s40771km)."
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch into an existing EKS cluster"
  LintSpellExclude:
    - Discngine
    - 3decision
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Basic configuration
        Parameters:
          - EKSClusterName
          - VPCID
          - ConfigureEKS
      - Label:
          default : Discngine 3decision database configuration
        Parameters:
          - DBInstanceIdentifier
          - DBName
          - DBPassword
          - DBSubnets
          - DBInstanceClass
          - DBMultiZone
      - Label:
          default: Discngine 3decision kube configuration
        Parameters:
          - TNamespace
          - JWTSecretName
          - JWTPrivateKey
          - JWTPublicKey
          - JWTKeysSecretName
          - PipelinePassword
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      EKSClusterName:
        default: Name of EKS Cluster
      VPCID:
        default: ID of the VPC
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      DBInstanceIdentifier:
        default: Identifier of the database
      DBName:
        default: Name of the database
      DBPassword:
        default: Password of the database
      DBSubnets:
        default: Subnets in the db subnet group
      DBInstanceClass:
        default: Instance type of the database
      DBMultiZone:
        default: Whether the DB is highly available
      TNamespace:
        default: 3decision Helm chart namespace
      JWTSecretName:
        default: Name of secret used for JWT
      JWTPrivateKey:
        default: Private SSH key in base 64 used for JWT
      JWTPublicKey:
        default: Public SSH key in base 64 used for JWT
      PipelinePassword:
        default: Password used for pipeline pilot
      ConfigureEKS:
        default: Boolean determining whether to configure EKS

Parameters:
  EKSClusterName:
    Description: "Required: The name of the EKS cluster in which the stacks will be deployed"
    Type: String
  VPCID:
    Type: String
    Description: "Required: The id of the VPC in which the EKS cluster is deployed"
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: 'eu-central-1'
    Description: "The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value."
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-discngine-3decision/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  DBInstanceIdentifier:
    Default: db3dec
    Description: "Optional: The database instance name.
                  This defaults to db3dec."
    Type: String
    MinLength: '1'
    MaxLength: '8'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBName:
    Default: ORCL
    Description: "Optional: The name given to the RDS Oracle database.
                  This defaults to ORCL."
    Type: String
    MinLength: '1'
    MaxLength: '8'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: true
    Description: "Required: The database admin account password."
    Type: String
    MinLength: '8'
    MaxLength: '41'
  DBSubnets:
    Description: 'Required: Subnets to use for the creation of the db subnet group.
                  Input your private subnets if you do not want your db to be publicly accessible.
                  Input public subnets if the EKS cluster is not inside the same VPC as these subnets.'
    Type: CommaDelimitedList
  DBInstanceClass:
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
    Default: db.t3.medium
    Description: Amazon RDS instance type for the Oracle Database instance
    Type: String
  DBMultiZone:
    Description: High Availability (Multi-AZ) for Oracle RDS.
        More informtion is available here - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html
    Type: String
    AllowedValues: [ 'true', 'false' ]
    Default: 'true'
  TNamespace:
    Default: tdecision
    Description: "Optional: The name of the kubernetes namespace in which the 3decision helm chart will be deployed.
                  This will default to tdecision if not given.
                  The namespace will be created if it doesn't already exists."
    Type: String
  JWTSecretName:
    Default: 3decision-jwt-secret
    Description: "Optional: The name of the kubernetes secret that will contain the ssh key
                  This will default to 3decision-jwt-secret.
                  It will be placed in the same namespace as the 3decision helm chart"
    Type: String
  JWTKeysSecretName:
    Default: AWS::NoValue
    Description: "Conditional: The name of a secret in SecretsManager containing base64 keys in fields private_key and public_key
                  By default, this will have no value, in which case the variables JWTPrivateKey and JWTPublicKey will be used."
    Type: String
  JWTPrivateKey:
    Default: AWS::NoValue
    Description: "Conditional: An SSH private key in base64 format
                  If JWTKeysSecretName is set, this variable is not used"
    Type: String
    NoEcho: true
  JWTPublicKey:
    Default: AWS::NoValue
    Description: "Conditional: An SSH public key in base64 format.
                  If JWTKeysSecretName is set, this variable is not used"
    Type: String
  PipelinePassword:
    Description: "Required: The password that will allow you to access the pipeline admin platform"
    Type: String
    NoEcho: true
  ConfigureEKS:
    Description: "Optionnal: Set to true to create EKS quickstart specific resources for your EKS cluster"
    Default: 'false'
    Type: String
    AllowedValues: ['true', 'false']
  NodeSecurityGroup:
    Description: "Optionnal: Id of the EKS SecurityGroup in which we will add the RDS ingress"
    Default: ''
    Type: String
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  UseJWTKeysSecret: !Not [ !Equals [ AWS::NoValue, !Ref JWTKeysSecretName ] ]
  ConfigureEKS: !Equals ['true', !Ref ConfigureEKS]

Resources:
  EKSCluster:
    Type: AWS::CloudFormation::Stack
    Condition: ConfigureEKS
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks-entrypoint-existing-cluster.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VPCID: !Ref VPCID
        KubeClusterName: !Ref EKSClusterName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
  EBSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/discngine-3decision-ebs.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
  RDSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/discngine-3decision-oracle.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DBName: !Ref DBName
        DBSubnets: !Join [ ",", !Ref DBSubnets ]
        DBInstanceClass: !Ref DBInstanceClass
        VpcId: !Ref VPCID
        NodeSecurityGroupId: !Ref NodeSecurityGroup
        DBMultiZone: !Ref DBMultiZone
  3decisionKubeStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/discngine-3decision-kube.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        TNamespace: !Ref TNamespace
        JWTSecretName: !Ref JWTSecretName
        JWTPrivateKey: !If [UseJWTKeysSecret, !Sub '{{resolve:secretsmanager:${JWTKeysSecretName}:SecretString:private_key}}', !Ref JWTPrivateKey]
        JWTPublicKey: !If [UseJWTKeysSecret, !Sub '{{resolve:secretsmanager:${JWTKeysSecretName}:SecretString:public_key}}', !Ref JWTPublicKey]
        EKSClusterName: !Ref EKSClusterName
        Data3DecVolumeID: !GetAtt EBSStack.Outputs.DataVolumeID
        CollectionVolumeID: !GetAtt EBSStack.Outputs.CollectionVolumeID
        ChoralVolumeID: !GetAtt EBSStack.Outputs.ChoralVolumeID
        DBConnectionString: !GetAtt RDSStack.Outputs.PrimaryConnectionString
        DBPassword: !Ref DBPassword
        PipelinePassword: !Ref PipelinePassword