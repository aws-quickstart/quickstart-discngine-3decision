---
AWSTemplateFormatVersion: "2010-09-09"
Description: This creates a VPC, Public Subnets and Private Subnets, and sets up Discngine 3decision infrastructure. (qs-1s40771i4).
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch into a new VPC"
  LintSpellExclude:
    - Discngine
    - 3decision
    - namespace
    - No
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network configuration"
        Parameters:
          - VPCCIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PublicSubnet3CIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - RemoteAccessCIDR
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Amazon EKS configuration
        Parameters:
          - ConfigSetName
          - NodeVolumeSize
          - WorkloadNamespace
          - NodeInstanceType
          - LoadBalancerType
          - NumberOfNodes
          - AdditionalEKSAdminUserArn
          - AdditionalEKSAdminRoleArn
      - Label:
          default : Discngine 3decision database configuration
        Parameters:
          - DBInstanceIdentifier
          - DBName
          - DBPassword
          - DBInstanceClass
          - DBMultiZone
      - Label:
          default: Discngine 3decision kube configuration
        Parameters:
          - TNamespace
          - JWTSecretName
          - JWTPrivateKey
          - JWTPublicKey
          - JWTKeysSecretName
          - EtlUser
          - EtlPassword
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
          - PerAccountSharedResources
          - PerRegionSharedResources
    ParameterLabels:
      KeyPairName:
        default: SSH key name
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private subnet 3 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      PublicSubnet3CIDR:
        default: Public subnet 3 CIDR
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      RemoteAccessCIDR:
        default: Allowed external access CIDR
      VPCCIDR:
        default: VPC CIDR
      PerAccountSharedResources:
        default: Per account shared resources
      PerRegionSharedResources:
        default: Per region shared resources
      LoadBalancerType:
        default: Load balancer type
      NodeInstanceType:
        default: Node instance type
      NumberOfNodes:
        default: Number of nodes
      AdditionalEKSAdminUserArn:
        default: Additional EKS admin ARN (IAM user)
      AdditionalEKSAdminRoleArn:
        default: Additional EKS admin ARN (IAM role)
      ConfigSetName:
        default: Config set name
      NodeVolumeSize:
        default: Size of worker nodes volumes
      WorkloadNamespace:
        default: Kubernetes namespace
      DBInstanceIdentifier:
        default: Identifier of the database
      DBName:
        default: Name of the database
      DBPassword:
        default: Password of the database
      DBInstanceClass:
        default: Instance type of the database
      DBMultiZone:
        default: Whether the DB is highly available
      TNamespace:
        default: 3decision Helm chart namespace
      JWTSecretName:
        default: Name of secret used for JWT
      JWTPrivateKey:
        default: Private SSH key in base 64 used for JWT
      JWTPublicKey:
        default: Public SSH key in base 64 used for JWT
      EtlUser:
        default: Username used for etl
      EtlPassword:
        default: Password used for etl

Parameters:
  KeyPairName:
    Description: A public/private key pair, which allows you to connect securely to your instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing Keyname
  NodeInstanceType:
    Type: String
    Default: t3.xlarge
    Description: EKS node instance type.
    AllowedValues:
      - t3.xlarge
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: The CIDR block for the VPC.
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: The CIDR block used for the public subnet located in Availability Zone 1.
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: The CIDR block used for the public subnet located in Availability Zone 2.
    Type: String
  PublicSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.160.0/20
    Description: The CIDR block for the public (DMZ) subnet 3 located in Availability Zone 3.
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: The CIDR block used for the private subnet located in Availability Zone 1.
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: The CIDR block used for the private subnet located in Availability Zone 2.
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
    Description: The CIDR block for private subnet 3 located in Availability Zone 3.
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: 'eu-central-1'
    Description: "The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value."
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-discngine-3decision/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  RemoteAccessCIDR:
    Default: 127.0.0.1/32
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances. We recommend
      that you set this value to a trusted IP range.
    Type: String
  LoadBalancerType:
    Type: String
    Default: ALB
    AllowedValues:
      - ALB
      - NLB
    Description: EKS Service Load Balancer Type.
  ConfigSetName:
    Type: String
    Default: "dng-3decision"
    Description: "Required: Name used to map advanced parameters to an EKS cluster.
                  Change to blank to create eks default parameters."
  NodeVolumeSize:
    Type: String
    Default: 100
    Description: "Required: Size of EBS volumes attached to worker nodes.
                  Increase this size if your pods are getting evicted with a disk pressure annotation."       
  WorkloadNamespace:
    Default: "discngine-3decision"
    Type: String
    Description: The Kubernetes namespace to use when provisioning the workload.
  PerAccountSharedResources:
    Type: String
    AllowedValues: ['AutoDetect', 'Yes', 'No']
    Default: 'AutoDetect'
    Description: Choose "No" if you already deployed another EKS Quick Start stack in your AWS account.
  PerRegionSharedResources:
    Type: String
    AllowedValues: ['AutoDetect', 'Yes', 'No']
    Default: 'AutoDetect'
    Description: Choose "No" if you already deployed another EKS Quick Start stack in your Region.
  NumberOfNodes:
    Default: 3
    Description: The number of Amazon EKS node instances. The default is one for each of the three Availability Zones.
    Type: Number
  DBInstanceIdentifier:
    Default: db3dec
    Description: "Required: The database instance name.
                  This defaults to db3dec."
    Type: String
    MinLength: '1'
    MaxLength: '8'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBName:
    Default: ORCL
    Description: "Required: The name given to the RDS Oracle database.
                  This defaults to ORCL."
    Type: String
    MinLength: '1'
    MaxLength: '8'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: true
    Description: "Required: The database admin account password."
    Type: String
    MinLength: '8'
    MaxLength: '41'
  DBInstanceClass:
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.t3.2xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
    Default: db.t3.xlarge
    Description: Amazon RDS instance type for the Oracle Database instance
    Type: String
  DBMultiZone:
    Description: High Availability (Multi-AZ) for Oracle RDS.
        More informtion is available here - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html
    Type: String
    AllowedValues: [ 'true', 'false' ]
    Default: 'false'
  TNamespace:
    Default: tdecision
    Description: "Required: The name of the kubernetes namespace in which the 3decision helm chart will be deployed.
                  This will default to tdecision if not given.
                  The namespace will be created if it doesn't already exists."
    Type: String
  JWTSecretName:
    Default: 3decision-jwt-secret
    Description: "Required: The name of the kubernetes secret that will contain the ssh key
                  This will default to 3decision-jwt-secret.
                  It will be placed in the same namespace as the 3decision helm chart"
    Type: String
  JWTKeysSecretName:
    Default: AWS::NoValue
    Description: "Conditional: The name of a secret in SecretsManager containing base64 keys in fields private_key and public_key
                  By default, this will have no value, in which case the variables JWTPrivateKey and JWTPublicKey will be used."
    Type: String
  JWTPrivateKey:
    Default: AWS::NoValue
    Description: "Conditional: An SSH private key in base64 format
                  If JWTKeysSecretName is set, this variable is not used"
    Type: String
    NoEcho: true
  JWTPublicKey:
    Default: AWS::NoValue
    Description: "Conditional: An SSH public key in base64 format.
                  If JWTKeysSecretName is set, this variable is not used"
    Type: String
  EtlUser:
    Default: "3decision"
    Description: "Required: The username that will allow you to connect to the platform"
    Type: String
  EtlPassword:
    Description: "Required: The password that will allow you to connect to the platform"
    Type: String
    NoEcho: true
  AdditionalEKSAdminUserArn:
    Default: ""
    Description: "Optional: IAM user Amazon Resource Name (ARN) to be granted administrative access to the EKS cluster."
    Type: String
  AdditionalEKSAdminRoleArn:
    Default: ""
    Description: "Optional: IAM role Amazon Resource Name (ARN) to be granted administrative access to the EKS cluster."
    Type: String
Conditions:
  ConfiSetNameSet: !Equals [!Ref ConfigSetName, '']
  CreateAdvancedConfigWithDefaults: !Not [Condition: ConfiSetNameSet]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Resources:
  AdvancedConfigDefaultsStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateAdvancedConfigWithDefaults
    Metadata: { cfn-lint: { config: { ignore_checks: [E9902, W9901] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks-advanced-configuration.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        ConfigSetName: !Ref ConfigSetName
        ConsulUIAccessCIDR: !Ref RemoteAccessCIDR
        VaultUIAccessCIDR: !Ref RemoteAccessCIDR
        NodeVolumeSize: !Ref NodeVolumeSize
        KubernetesVersion: !Ref 'AWS::NoValue'
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template.yaml'
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref AWS::Region
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        AvailabilityZones: !Join [',', Fn::GetAZs: !Ref 'AWS::Region']
        NumberOfAZs: '3'
        VPCCIDR: !Ref VPCCIDR
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3ACIDR: !Ref PrivateSubnet3CIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PublicSubnet3CIDR: !Ref PublicSubnet3CIDR
        PrivateSubnetATag2: "kubernetes.io/role/internal-elb="
        PublicSubnetTag2: "kubernetes.io/role/elb="
  EKSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks-entrypoint-existing-vpc.template.yaml'
        - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Parameters:
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        PublicSubnet3ID: !GetAtt VPCStack.Outputs.PublicSubnet3ID
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Sub "${QSS3KeyPrefix}submodules/quickstart-amazon-eks/"
        PrivateSubnet1ID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        PrivateSubnet3ID: !GetAtt VPCStack.Outputs.PrivateSubnet3AID
        NumberOfNodes: !Ref NumberOfNodes
        ConfigSetName: !Ref ConfigSetName
        NodeInstanceType: !Ref NodeInstanceType
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        PerAccountSharedResources: !Ref PerAccountSharedResources
        PerRegionSharedResources: !Ref PerRegionSharedResources
        EfsStorageClass: 'Enabled'
        ClusterAutoScaler: 'Enabled'
        EKSPublicAccessEndpoint: 'Enabled'
        AdditionalEKSAdminUserArn: !Ref AdditionalEKSAdminUserArn
        AdditionalEKSAdminRoleArn: !Ref AdditionalEKSAdminRoleArn
  3decisionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/discngine-3decision.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        EKSClusterName: !GetAtt EKSStack.Outputs.EKSClusterName
        DBName: !Ref DBName
        DBPassword: !Ref DBPassword
        DBInstanceClass: !Ref DBInstanceClass
        DBMultiZone: !Ref DBMultiZone
        DBSubnets: !Join [ ",", [ !GetAtt VPCStack.Outputs.PrivateSubnet1AID, !GetAtt VPCStack.Outputs.PrivateSubnet2AID, !GetAtt VPCStack.Outputs.PrivateSubnet3AID ] ]
        TNamespace: !Ref TNamespace
        JWTSecretName: !Ref JWTSecretName
        JWTPrivateKey: !Ref JWTPrivateKey
        JWTPublicKey: !Ref JWTPublicKey
        EtlUser: !Ref EtlUser
        EtlPassword: !Ref EtlPassword
        NodeSecurityGroup: !GetAtt EKSStack.Outputs.NodeGroupSecurityGroup